#!/usr/bin/env bash

version="1.0.0"

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()

print_help ()
{
	echo "Create a new application by specifying source code, templates, and/or images"
	printf 'Usage: %s [-p|--parameter <arg>] [-v|--version] [-h|--help] <name>\n' "$0"
	printf "\t%s\n" "<name>: value of (IMAGE | IMAGESTREAM | TEMPLATE | PATH | URL ...)"
	printf "\t%s\n" "-p,--parameter: optional argument for openshift client (no default)"
	printf "\t%s\n" "-v,--version: Prints version"
	printf "\t%s\n" "-h,--help: Prints help"
}

PARAMETERS=''

# THE PARSING ITSELF
while test $# -gt 0
do
	_key="$1"
	case "$_key" in
		-p*|--parameter|--parameter=*)
			_val_from_long="${_key##--parameter=}"
			_val_from_short="${_key##-p}"
			if test "$_val_from_long" != "$_key"
			then
				_val="$_val_from_long"
			elif test "$_val_from_short" != "$_key" -a -n "$_val_from_short"
			then
				_val="$_val_from_short"
			else
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_val="$2"
				shift
			fi
			PARAMETERS+="-p ${_val} "
			;;
		-v*|--version)
			echo ${version}
			exit 0
			;;
		-h*|--help)
			print_help
			exit 0
			;;
		*)
			_positionals+=("$1")
			;;
	esac
	shift
done

_positional_names=('name' )
_required_args_string="'name'"
test ${#_positionals[@]} -lt 1 && _PRINT_HELP=yes die "FATAL ERROR: Not enough positional arguments - we require exactly 1 (namely: $_required_args_string), but got only ${#_positionals[@]}." 1
test ${#_positionals[@]} -gt 1 && _PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect exactly 1 (namely: $_required_args_string), but got ${#_positionals[@]} (the last one was: '${_positionals[*]: -1}')." 1
for (( ii = 0; ii < ${#_positionals[@]}; ii++))
do
	eval "${_positional_names[ii]}=\${_positionals[ii]}" || die "Error during argument parsing, possibly an Argbash bug." 1
done

new_app()
{
    new_app_error=`oc new-app ${_positionals} ${PARAMETERS} 2>&1`
    if [ $? -eq 0 ]; then
      echo {\"success\": \"true\"}
    else
      echo {\"success\": \"false\", \"error\": \"${new_app_error}\"}
    fi
}

new_app